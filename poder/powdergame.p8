pico-8 cartridge // http://www.pico-8.com
version 27
__lua__
function _init()
	selected=0
	conway=false
	ispaused=false
	mousex=0
	mousey=0
	offsetx=40
	offsety=40
	gridx=128-offsetx*2
	gridy=128-offsety*2
	grid={}
	grid.col=0
	grid.visited=false
	for n=1,gridx*gridy do
		add(grid,{col=0,visited=false})
	end
end

function _update()
 if ispaused==false then
	 if conway==false then
	 	stdupdate()
	 else
	  conupdate()
	 end
	end
	control()
end

function _draw()
	cls()
	map()
	poke(24365,1)
	--cursor()
	x=0
	y=0
	for g in all(grid) do
		pset(x+offsetx,y+offsety,g.col)
		x+=1
		if x==gridx then
			x=0
			y+=1
		end
	end
	rect(0,0,127,127,1)
	rect(offsetx-1,offsety-1,
	gridx+offsetx,gridy+offsety,1)
	ui()
	getmouse()
	spr(32,mousex,mousey)
	
	print(ispaused,0,0,12)
end
-->8
--logic
function checkelement()
		
	if grid[t].col==4 then
		wood()		 
	elseif grid[t].col==5 then
		stone()
	elseif grid[t].col==7 then
		smoke()
	elseif grid[t].col==8 then
		fire()
	elseif grid[t].col==10 then
		sand()
	elseif grid[t].col==12 then
		water()
	
	end
end


function water()
	--gravity
	if grid[t+gridx].col==0 then
		grid[t].col=0
		grid[t].visited=true
		grid[t+gridx].col=12
		grid[t+gridx].visited=true
	elseif grid[t+1].col==0 then
		grid[t].col=0
		grid[t].visited=true
		grid[t+1].col=12
		grid[t+1].visited=true
	elseif grid[t-1].col==0 then
		grid[t].col=0
		grid[t].visited=true
		grid[t-1].col=12
		grid[t-1].visited=true
	end 
end
function wood() 
end
function stone() 
end
function fire() 
end
function smoke() 
	if t>gridx and grid[t-gridx].col==0  then
		grid[t].col=0
		grid[t].visited=true
		grid[t-gridx].col=7
		grid[t-gridx].visited=true
	elseif t>gridx and grid[t+1].col==0 and t>0 then
		grid[t].col=0
		grid[t].visited=true
		grid[t+1].col=7
		grid[t+1].visited=true
	elseif t>gridx and grid[t-1].col==0 and t>0 then
		grid[t].col=0
		grid[t].visited=true
		grid[t-1].col=7
		grid[t-1].visited=true
	end 
end

function sand()
 --gravity
	if grid[t+gridx].col==0 then
		grid[t].col=0
		grid[t].visited=true
		grid[t+gridx].col=10
		grid[t+gridx].visited=true
	elseif grid[t+1+gridx].col==0 then
		grid[t].col=0
		grid[t].visited=true
		grid[t+1+gridx].col=10
		grid[t+1+gridx].visited=true
	elseif grid[t-1+gridx].col==0 then
		grid[t].col=0
		grid[t].visited=true
		grid[t-1+gridx].col=10
		grid[t-1+gridx].visited=true
	--water
	elseif grid[t+gridx].col==12 then
		grid[t].col=12
		grid[t].visited=true
		grid[t+gridx].col=10
		grid[t+gridx].visited=true
	end
end
-->8
--ui
function ui()
	if selected==0 then
	 name="void"
	elseif selected==1 then
	 name="clone"
	elseif selected==2 then
	 name="virus"
	elseif selected==3 then
	 name="life"
	elseif selected==4 then
	 name="wood"
	elseif selected==5 then
	 name="stone"
	elseif selected==6 then
	 name="iron"
	elseif selected==7 then
	 name="smoke"
	elseif selected==8 then
	 name="lava"
	elseif selected==9 then
	 name="fire"
	elseif selected==10 then
	 name="sand"
	elseif selected==11 then
	 name="acid"
	elseif selected==12 then
	 name="water"
	elseif selected==13 then
	 name="girder"
	elseif selected==14 then
	 name="eraser"
	elseif selected==15 then
	 name="player"
	
	end
	print(name,88,2,7)
	spr(selected+16,80,1)
end


-->8
--conway's game of life
function life(t)

neighbours=getneighbours()
if neighbours<2 or 
			neighbours>3 then
 grid[t].col=0
end
end

function voidlife(t)
neighbours=getneighbours()
if neighbours==3 then
 grid[t].col=3
end
end

function getneighbours()
 n=0
if grid[t-gridx].col==3 then
	n+=1
	end
if grid[t+gridx].col==3 then
	n+=1
	end
if grid[t+1].col==3 then
	n+=1
	end
if grid[t-1].col==3 then
	n+=1
end

if grid[t-1+gridx].col==3 then
	n+=1
end
if grid[t+1+gridx].col==3 then
	n+=1
end
if grid[t-1-gridx].col==3 then
	n+=1
end
if grid[t+1-gridx].col==3 then
	n+=1
end 
 return n
end

function lifelogic()
if tempg[t].col==3 then
		life(t)
elseif conway==true then
	 if t>tempg+1 and 
	 t<gridx*gridy-1 then
	 	voidlife(t)
	 end
	end
end
-->8
--user
function	getmouse()
 mousex=stat(32)
 mousey=stat(33)
	
end

function control()
	if stat(34)==1 then
		if mousex >offsetx 
		and mousex<offsetx+gridx
		and mousey >offsety 
		and mousey<offsety+gridy then
			drop=(mousex-offsetx)+
			((mousey-offsety)*gridx)
			grid[drop].col=selected
			
			if selected==3then
				conway=true
			end
			
		end
	elseif btnp(0) then
	 selected-=1
	 if selected<0 then
	 	selected=16
	 end
	elseif btnp(1) then
	 selected+=1
	 if selected>16 then
	 	selected=0
	 end
	
	
	elseif btnp(2) then
		if ispaused==true then
	 ispaused=false
	 else
	 ispaused=true
	 end
	end
end
-->8
--update
function stdupdate()
for x=1,gridx-1 do
		for y=0,gridy-2 do
			t=x+(y*gridx)
			if grid[t].visited==false then
				checkelement()
			end
		end
	end
	
	for g in all(grid) do
		g.visited = false
	end
end
function conupdate()
 tempg=grid
 for x=1,gridx-1 do
		for y=0,gridy-2 do
			t=x+(y*gridx)
			lifelogic()
		end
	end
	grid=tempg
end
__gfx__
00000000600000060000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000600000060000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000300005444000000000000000000000000000000800000000000000009aa000003b00000c0000000000000000566600000000
0000010000d1100000d00d0000300bbb0544400000000000056666660066670000880000000088000009aa000000000000cc000000000000000266669ffffff0
0000001000d110000d0220d00008bbbb0544400b0555555005666766067756000088800000088800009aa0003bbbbb3b00ccc000000000000002e6669ffffff0
000000100d1111000022220030bbbdbb045f40b3565d5d550566766666666666088888000088980009aa00003b0b0b000ccccc0015d5d5d0002eee669f0ff0f0
000000100d1111000022220008bbddb8045544005555555505666666677767670888980008899880009a00003bbbbb000ccc6c002d5d5d50002eeee09ffffff0
0100010000d110000d0220d00bbbbbb0044440005d556550000566006756675600899800889999880009a0003bbbbb0000c66c000000000002eeeee09ff09ff0
0011100000d1100000d00d003bbb80030445400000005500005666600666066000888800899ca98800009a003b0b0b0000cccc000000000002eeee0009ffff00
000000000000000000000000030003000445400000000000056666660000000000000000899cc9880009a00000000000000000000000000000eee00000000000
87000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
88700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
08700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000005444000000c0000000000000000300000000000000000000000000000000000000000000000000000000000000000000000000000000000
00008800000000000544400000cc00000066670000300bbb00000000000000000000000000000000000000000000000000000000000000000000000000000000
00088800055555500544400b00ccc000067756000008bbbb00000000000000000000000000000000000000000000000000000000000000000000000000000000
00889800565d5d55045f40b30ccccc006666666630bbbdbb00000000000000000000000000000000000000000000000000000000000000000000000000000000
0889988055555555045544000ccc6c006777676708bbddb800000000000000000000000000000000000000000000000000000000000000000000000000000000
889999885d5565500444400000c66c00675667560bbbbbb000000000000000000000000000000000000000000000000000000000000000000000000000000000
899ca988000055000445400000cccc00066606603bbb800300000000000000000000000000000000000000000000000000000000000000000000000000000000
899cc988000000000445400000000000000000000300030000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00777770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
07777777000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777777000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77607607700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77007007700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777777677777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
07700076777777770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00777767777777770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00066677777777770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077777776607770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077707776607770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077707770607770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00007700770000770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
